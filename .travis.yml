language: python
group: travis_latest
dist: bionic
sudo: true

env:
    global:
        # prefix before commands - used for wine, there the prefix is "wine"
        - cPREFIX=""
        # command to launch python interpreter (its different on macOs, there we need python3)
        - cPYTHON="python"
        # command to launch pip (its different on macOs, there we need pip3)
        - cPIP="python -m pip"
        # switch off wine fix me messages
        - WINEDEBUG=fixme-all

        # PYTEST
        - PYTEST_DO_TESTS="True" 

        # FLAKE8 tests
        - DO_FLAKE8_TESTS="True"

        # MYPY tests
        - MYPY_DO_TESTS="True"
        - MYPY_OPTIONS="--follow-imports=normal --ignore-missing-imports --implicit-reexport --no-warn-unused-ignores --strict"
        - MYPYPATH="./igittigitt/3rd_party_stubs"

        # coverage
        - DO_COVERAGE="True"
        - DO_COVERAGE_UPLOAD_CODECOV="True"
        - DO_COVERAGE_UPLOAD_CODE_CLIMATE="True"

        # package name
        - PACKAGE_NAME="igittigitt"
        # the registered CLI Command
        - CLI_COMMAND="igittigitt"
        # the source file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_SOURCE="./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_TARGET="./README.rst"

        # secure environment variable
        - secure: "al37djFJQUcXqwSBcwpso31D3kxYSIAByQOBq7m3m4i5IzrZApHnUUvAHiwzUGFO12f0Wp3gvL9qv3aj0FG+bk1M4biN0DB+mW9Vc3/kiKa6gh6NGnIitQzO/1jO7V0LQPMnl0AkLdFJyq15DxzMgz/luIt+kqYp+9TTzHHG2uvdA0hywdwWluT8qA8rivpABJt6g2cs/2yLSsXgl+2mfZSJgB054KB9nHhLBxgjGZbnquyz2QLb+I8o8RHhBvb95yuab3mYvWTdDb1fJ6zVUa/trD1muvAfMvY0UuyR/lke7xbTuXp0Dcgu2dqMog+6skXgolttYk7ETZf8cSUulcBLlVW58m3xtoUUCQtOGJImMLyTzTP3B4c+BN7YPUqWtfq+OaEL14W+WPxN0/sPXB3krsVk4gJ9NRMzEilPRpBekpt2epBzcDG9byfv+4XoDy0KLVVqh7ZckMGcoK8Jva9RNw/LWH5846mUZKDevgsJtXJG168KwIsLq7+ysfhKL+kH7d3aEzBVyskKZ9sEdM3stIsda+WGjixsGe6vfUaqqQUchow2GsSEQoSEIuuDtZN+fylhNw/WKTBziFYDtYzQ3zzqNCUsCdFNNqnbMLmnpJi/w/6Bj6gODJPxMvqI6iTbdxlHZ9fSMofbeydIpKBPzxnjndicStc4IMdvk4k="  # CC_TEST_REPORTER_ID.secret
        - secure: "vNZGDOWqKU0ART9tvh/6v2bLtlI1h/fbw0F9dwf41IP3x51BI7tpg3wocHCVi/zpGgM7GHpgRA9ziPRXTaXPmRZ+547TeDpVKKr/PKZBMmLLgSLVeansr/xZ5yDHzXuD42AjVo9sGH0zcREvieQyeW6ne5B1YOyM2EH4k/DngzULaa+C6AQQwSEuww5k1Fiqai2ord/zqpgSY463EgLLDNgGlPhhR20hOL+9J4CAwH8Qqa0qYGX58lHsQR1V1DlwemsqPju9NAqSjwILnviG/2wHym21HY09B0YAS0ADwIss6U9bZ+1EddeNDtZ3BVcH8OImhSNSZ2IJ5U6myEl3dI73/De3I8q9cM+Ir9tTn3Q2wzRkv+qm01Ds2mtRMBdVjEr85C6Azzby6Fh2sAv6QoLsAiTNPqE591ClVGCXxxrqcI7ZENqogLY+gmCdXNIHueFJK0gysJxig1ThBlCgAMbWx7COZngV01R+Ey0xANWqO9YnwJeXP1wTrLnCvnMrW2oQ2xiU6jBpZBc0s7SQs/WV+HDy5rLVOny7LXf2cz1RhoT6GnVWPl+StgFkGWbxl2JT4xphPTVfVv4HFALdKcTpa98E+5XlnBBzBfRAo7OFQforb5aB0jucsazTDGsO/SSbyC6GsR4Yayd9Psf6JZtsIFtzmTWS5YoTOIYivC0="  # PYPI_PASSWORD.secret



addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   			# start services
  - xvfb    			# is needed for WINE on headless installation

matrix:
    include:

    - os: windows
      if: true
      language: sh
      name: "Windows Python 3.9"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - git clone https://github.com/bitranox/lib_bash.git /usr/local/lib_bash
          - chmod -R 0755 /usr/local/lib_bash
          - chmod -R +x /usr/local/lib_bash/*.sh
          - /usr/local/lib_bash/lib_retry.sh retry choco install python3
          - export PATH="/c/Python310:/c/Python310/Scripts:/c/Python39:/c/Python39/Scripts:/c/Python38:/c/Python38/Scripts:$PATH"
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="False"
          - export MYPY_DO_TESTS="True"


    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.6"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.7"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="False"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="True"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9-dev"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "pypy3"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="False"

    - os: linux
      arch: "ppc64le"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "s390x"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "arm64"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: osx
      if: true
      language: sh
      name: "macOS 10.15.7"
      python: "3.8"
      osx_image: xcode12.2
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - cPREFIX=""				# prefix before commands - used for wine, there the prefix is "wine"
        - cPYTHON="python3"			# command to launch python interpreter (its different on macOs, there we need python3)
        - cPIP="python3 -m pip"   	# command to launch pip (its different on macOs, there we need pip3)
        - export BUILD_DOCS="False"
        - export DEPLOY_SDIST="False"
        - export DEPLOY_WHEEL="False"
        - export DEPLOY_TEST="True"
        - export MYPY_DO_TESTS="True"


install:
    - ${cPIP} install lib_travis
    - log_util --colortest
    - lib_travis install

script:
    - BRANCH=$(lib_travis get_branch)
    - log_util --level=NOTICE --banner "working on branch ${BRANCH}"
    - lib_travis script

after_success:
    - lib_travis after_success
    - lib_travis deploy
    - ls -l ./dist

notifications:
  email:
    recipients:
        - bitranox@gmail.com
    # on_success default: change
    on_success: never
    on_failure: always
